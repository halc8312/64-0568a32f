{
  "key": "systemAbstraction",
  "value": {
    "designRules": "1. カラーパレット\n- メインカラー：#4A90E2（信頼感のある青）\n- アクセントカラー：#F5A623（温かみのあるオレンジ）\n- バックグラウンド：#F8F9FA（やさしいグレー）\n- テキスト：#333333（読みやすい黒）\n- エラー：#D0021B（控えめな赤）\n- サクセス：#7ED321（落ち着いた緑）\n\n2. タイポグラフィ\n- 見出し：Noto Sans JP Bold\n- 本文：Noto Sans JP Regular\n- フォントサイズ：12px-24px\n\n3. レイアウト\n- グリッドシステムを採用\n- レスポンシブブレイクポイント：\n  - モバイル：～767px\n  - タブレット：768px～1023px\n  - デスクトップ：1024px～\n\n4. UI要素\n- 角丸：4px\n- ボタン：塗りつぶしスタイル\n- アイコン：Material Icons\n- アニメーション：イーズイン・アウト、0.3s",
    "codingRules": "1. 命名規則\n- クラス名：パスカルケース（例：PersonalityDiagnosis）\n- メソッド名：キャメルケース（例：calculatePersonalityType）\n- 変数名：キャメルケース（例：userResponse）\n- 定数：スネークケース大文字（例：MAX_QUESTION_COUNT）\n\n2. インデント\n- スペース4つを使用\n- ネストは最大3階層まで\n\n3. コードの可読性\n- 関数は単一責任の原則に従う\n- メソッドは30行以内を目標\n- 意図が明確な変数名・関数名を使用\n- コメントは必要最小限に留める\n\n4. エラー処理\n- 例外は具体的な型を使用\n- エラーメッセージは日本語で明確に記述\n- ログは適切なレベル分けを行う\n- 重要な処理は必ずtry-catch",
    "systemAbstraction": "64種類の性格タイプに基づく診断・アドバイスを提供するWebアプリケーションシステム。主な機能として、(1)詳細な質問による性格診断機能、(2)恋愛・仕事・金銭管理等の分野別個別アドバイス機能、(3)診断結果の保存・履歴管理機能、(4)SNSシェア機能、(5)ユーザー管理機能を実装する。システムはスマートフォン・タブレット・PCに対応したレスポンシブデザインとし、PWA対応により各プラットフォームでアプリとしても利用可能。データはクラウド上で管理され、ユーザーはいつでもどこでも診断結果やアドバイスにアクセス可能。また、診断アルゴリズムは心理学の知見に基づいて設計され、科学的根拠のある信頼性の高い結果を提供する。"
  }
}
